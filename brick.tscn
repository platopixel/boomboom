[gd_scene load_steps=8 format=3 uid="uid://cq1tglkkatsqo"]

[ext_resource type="Texture2D" uid="uid://bud5f1bhbqfxf" path="res://art/sprite_bricks0.png" id="2_5r2n3"]
[ext_resource type="Texture2D" uid="uid://dy07u13ysx3bt" path="res://art/sprite_bricks1.png" id="3_r3ecw"]
[ext_resource type="Texture2D" uid="uid://cwjeaok6hfcmf" path="res://art/sprite_bricks2.png" id="4_cvncw"]
[ext_resource type="Texture2D" uid="uid://cupmkmvm8mr1y" path="res://art/sprite_bricks3.png" id="5_jop82"]

[sub_resource type="GDScript" id="GDScript_defx2"]
script/source = "extends Area2D

signal detonate
signal hit

var area_hit

# Parameters for the shake effect
# var shake_intensity = Vector2(-10, -10)
var shake_intensity = 3
var shake_duration = 0.075
var shake_timer = 0
var is_bouncing = false
var initial_position
var hit_direction

func _ready():
	add_to_group(\"brick\")
	$AnimatedSprite2D.connect(\"animation_finished\", self._on_AnimatedSprite2D_animation_finished)

func _process(delta):
	if shake_timer > 0:
		shake_timer -= delta
		# Randomly offset the Area2D's position
		var bounce = hit_direction * shake_intensity
		# position = position.lerp(bounce, delta)
		position = position + Vector2(randf_range(-shake_intensity, shake_intensity), randf_range(-shake_intensity, shake_intensity))
		if shake_timer <= 0:
			# reset the position after shaking
			position = initial_position


func _on_AnimatedSprite2D_animation_finished():
	if area_hit:
		emit_signal(\"detonate\", area_hit)
	queue_free()

# Hit by piece
func _on_body_entered(body):
	if body.is_in_group(\"missile\"):
		body.sleeping = true
		body.detonate()
		area_hit = body.global_position
		var animated_sprite = $AnimatedSprite2D
		animated_sprite.play(\"flash_colors\")
	elif body is RigidBody2D:
		var bounce_direction = Vector2(0, -1) # Change this based on your needs
		var bounce_strength = 500 # Adjust the strength as needed
		body.apply_central_impulse(bounce_direction * bounce_strength)
		emit_signal(\"hit\", self)
		# Bounce the brick
		var direction = position - body.global_position
		direction = direction.normalized()
		shake(direction)

func shake(direction: Vector2):
	hit_direction = direction
	initial_position = position
	shake_timer = shake_duration
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_35jan"]
size = Vector2(20, 17.3333)

[sub_resource type="SpriteFrames" id="SpriteFrames_d3n2a"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("2_5r2n3")
}, {
"duration": 1.0,
"texture": ExtResource("3_r3ecw")
}, {
"duration": 1.0,
"texture": ExtResource("4_cvncw")
}, {
"duration": 1.0,
"texture": ExtResource("5_jop82")
}],
"loop": false,
"name": &"flash_colors",
"speed": 4.0
}]

[node name="Brick" type="Area2D"]
collision_layer = 0
script = SubResource("GDScript_defx2")
metadata/_edit_group_ = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -1.90735e-06)
scale = Vector2(1.5, 1.5)
shape = SubResource("RectangleShape2D_35jan")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
scale = Vector2(1.5, 1.5)
sprite_frames = SubResource("SpriteFrames_d3n2a")
animation = &"flash_colors"

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
