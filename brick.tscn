[gd_scene load_steps=13 format=3 uid="uid://cq1tglkkatsqo"]

[ext_resource type="Texture2D" uid="uid://ckt2hqjyt16xo" path="res://art/wall.png.png" id="2_rtkgn"]
[ext_resource type="Shader" path="res://brick.gdshader" id="5_8jgbb"]
[ext_resource type="FontFile" uid="uid://dtxpxqe0wu7o" path="res://fonts/Xolonium-Regular.ttf" id="6_unvki"]
[ext_resource type="Texture2D" uid="uid://ds53ifs50p0jt" path="res://art/orb.png" id="7_6gfjx"]

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_8h5s7"]
rough = true
absorbent = true

[sub_resource type="GDScript" id="GDScript_defx2"]
script/source = "extends RigidBody2D

signal detonate
signal hit_by_piece

var area_hit

var initial_position
var hit_direction

# bricks are num_hits / hit_threshold
@export var num_hits = 10 # initial hits
@export var hit_threshold = randi_range(10, 100) # num hits before brick explodes


func _ready():
	# godot wasn't respecting the initial flashState value so manually set it here
	$Sprite2D.get_material().set_shader_parameter(\"flashState\", 0)
	$Label.text = str(num_hits) + \"/\" + str(hit_threshold)
	add_to_group(\"brick\")


# Hit callback
func _on_area_2d_body_entered(body):
	if body.is_in_group(\"missile\"):
		body.sleeping = true
		body.detonate()
		area_hit = body.global_position
	elif body.is_in_group(\"piece\"):
		num_hits += 1
		$Label.text = str(num_hits) + \"/\" + str(hit_threshold)
		# Reset the animation so it flashes every time it's hit
		$Sprite2D/AnimationPlayer.seek(0, true)
		$Sprite2D/AnimationPlayer.play(\"brick_flash\")
		emit_signal(\"hit_by_piece\", self)


func _on_AnimatedSprite2D_animation_finished():
	if area_hit:
		emit_signal(\"detonate\", area_hit)
	queue_free()


# This was used when the Brick was an Area2D before I updated it to a rigidbody
func _on_body_entered(body):
	if body.is_in_group(\"missile\"):
		body.sleeping = true
		body.detonate()
		area_hit = body.global_position
		var animated_sprite = $AnimatedSprite2D
		animated_sprite.play(\"flash_colors\")
	elif body is RigidBody2D:
		emit_signal(\"hit_by_piece\", self)


func get_brick_width():
	return $Sprite2D.texture.get_width() * $Sprite2D.scale.x
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_mgyre"]
resource_local_to_scene = true
shader = ExtResource("5_8jgbb")
shader_parameter/flashColor = Color(0.980392, 0.992157, 1, 1)
shader_parameter/flashState = 1.0

[sub_resource type="Animation" id="Animation_fudon"]
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/flashState")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 1),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [1.0, 0.0]
}

[sub_resource type="Animation" id="Animation_2dlqx"]
resource_name = "brick_flash"
length = 0.5
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath(".:material:shader_parameter/flashState")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [1.0, 0.0]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_fy5al"]
_data = {
"RESET": SubResource("Animation_fudon"),
"brick_flash": SubResource("Animation_2dlqx")
}

[sub_resource type="RectangleShape2D" id="RectangleShape2D_6ngbx"]
size = Vector2(128, 128)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ctkqc"]
size = Vector2(128, 128)

[node name="Brick" type="RigidBody2D"]
physics_material_override = SubResource("PhysicsMaterial_8h5s7")
gravity_scale = 0.0
freeze = true
script = SubResource("GDScript_defx2")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_mgyre")
position = Vector2(18, 30)
scale = Vector2(4, 4)
texture = ExtResource("2_rtkgn")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sprite2D"]
libraries = {
"": SubResource("AnimationLibrary_fy5al")
}

[node name="Sprite2D2" type="Sprite2D" parent="."]
visible = false
material = SubResource("ShaderMaterial_mgyre")
position = Vector2(18, 30)
scale = Vector2(4, 4)
texture = ExtResource("7_6gfjx")

[node name="AnimationPlayer" type="AnimationPlayer" parent="Sprite2D2"]
libraries = {
"": SubResource("AnimationLibrary_fy5al")
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(18, 30)
shape = SubResource("RectangleShape2D_6ngbx")

[node name="Area2D" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(18, 30)
shape = SubResource("RectangleShape2D_ctkqc")

[node name="Label" type="Label" parent="."]
offset_left = -35.0
offset_top = 4.0
offset_right = 73.0
offset_bottom = 53.0
theme_override_colors/font_color = Color(0.980392, 0.992157, 1, 1)
theme_override_colors/font_outline_color = Color(0.262745, 0, 0.403922, 1)
theme_override_constants/outline_size = 5
theme_override_fonts/font = ExtResource("6_unvki")
theme_override_font_sizes/font_size = 18
text = "10/20"
horizontal_alignment = 1
vertical_alignment = 1
justification_flags = 162

[connection signal="body_entered" from="." to="." method="_on_body_entered"]
[connection signal="body_entered" from="Area2D" to="." method="_on_area_2d_body_entered"]
